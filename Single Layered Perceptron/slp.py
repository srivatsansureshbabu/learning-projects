# -*- coding: utf-8 -*-
"""SLP.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1HnzdeXyY9fSH-8za-Kbbv9Wygi-770I_
"""

import numpy as np
from numpy import random
# features
features = np.array([[0,0],[0,1],[1,0],[1,1]])
y = np.array([0,0,0,1])

# Weights
rng = np.random.default_rng()
weights = rng.uniform(-1, 1, size=2)

#biases
bias = rng.uniform(-1, 1)

#epochs
epochs = 100
#hyperparameters
learning_rate = 0.1

# training loop
for epoch in range(epochs):
  for i,x in enumerate(features): # goes through entire features
    sum = np.dot(x,weights) + bias
    if sum >= 0:
      y_pred = 1
    else:
      y_pred = 0
    error = y[i] - y_pred
    bias = bias + learning_rate*error

    for j,weight in enumerate(weights):
      weights[j] = weight + learning_rate*error*x[j]

# testing loop
predictions = []
for i,feature in enumerate(features):
  sum = np.dot(feature,weights) + bias

  if sum >= 0:
    y_pred = 1
  else:
    y_pred = 0

  predictions.append(y_pred)


print(predictions)